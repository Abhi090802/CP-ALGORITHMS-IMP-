// creation of seg TC=O(N) SC=O(N) 
// range query TC=O(LOGN) SC=O(LOGN) 
//  sum query TC=O(LOGN) SC=O(LOGN) 
#include <bits/stdc++.h>
using namespace std;
   
void updateseg2(vector<int>&st, int ss, int se, int i, int diff, int si) 
{ 
    if (i < ss || i > se) 
        return; 
    st[si] = st[si] + diff; 
    if (se != ss) 
    { 
        int mid = ss+(se-ss)/2; 
        updateValueUtil(st, ss, mid, i, diff, 2*si + 1); 
        updateValueUtil(st, mid+1, se, i, diff, 2*si + 2); 
    } 
} 
 
void updateseg(vector<int>&arr, vector<int>&st, int n, int i, int new_val) 
{
    if (i < 0 || i > n-1) 
    { 
        cout<<"Invalid Input"; 
        return; 
    } 
    int diff = new_val - arr[i]; 
    arr[i] = new_val; 
    updateValueUtil(st, 0, n-1, i, diff, 0); 
} 
  
int segsum2(vector<int>&st, int ss, int se, int qs, int qe, int si) 
{ 
    if (qs <= ss && qe >= se) 
        return st[si]; 
    if (se < qs || ss > qe) 
        return 0; 
    int mid = ss+(se-ss)/2; 
    return segsum2(st, ss, mid, qs, qe, 2*si+1) + 
        segsum2(st, mid+1, se, qs, qe, 2*si+2); 
} 

int segsum(vector<int>&st, int n, int l, int r) 
{ 
    if (l< 0 || r> n-1 || l> r) 
    { 
        cout<<"Invalid Input"; 
        return -1; 
    } 
  
    return segsum(st, 0, n-1,l,r, 0); 
} 
 
int makeseg2(vector<int>&arr, int ss, int se, vector<int>&st, int si) 
{ 
    if (ss == se) 
    { 
        st[si] = arr[ss]; 
        return arr[ss]; 
    }
    int mid = ss+(se-ss)/2; 
    st[si] = makeseg2(arr, ss, mid, st, si*2+1) + 
            makeseg2(arr, mid+1, se, st, si*2+2); 
    return st[si]; 
} 

vector<int>makeseg(vector<int>&arr, int n) 
{
    int x = (int)(ceil(log2(n))); 
    int max_size = 2*(int)pow(2, x) - 1; 
        vector<int>st(max_size); 
    makeseg2(arr, 0, n-1, st, 0); 
    return st; 
} 

int main() 
{ 
    vector<int>arr = {1, 3, 5, 7, 9, 11}; 
    int n = arr.size();
    vector<int>st= makeseg(arr, n); 
    cout<<"Sum of values in given range = "<<segsum(st, n, 1, 3)<<endl; 
  
    updateseg(arr, st, n, 1, 10); 
    cout<<"Updated sum of values in given range = "
            <<segsum(st, n, 1, 3)<<endl; 
    return 0; 
} 




